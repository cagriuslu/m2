syntax = "proto3";
package m2.pb;

import "m2g_GroupType.proto";
import "m2g_ObjectType.proto";
import "m2g_SpriteType.proto";
import "VecF.proto";
import "M2.proto";

message Group {
  m2g.pb.GroupType type = 1;
  uint32 instance = 2;
}

message Object {
  VecF position = 1;
  float orientation = 2; // In radians
  m2g.pb.ObjectType type = 3;
  Group group = 4;
  GraphicsLayer graphics_layer = 5;
  PhysicsLayer physics_layer = 6;
  bool is_locked = 7; // If locked, level editor isn't allowed to move or remove the object
}

message SpriteTypeArray {
  repeated m2g.pb.SpriteType items = 1;
}
message BackgroundLayer {
  repeated SpriteTypeArray background_rows = 1;
  repeated SpriteTypeArray second_background_rows = 2; // Second quadrant, negative x, positive y, UNUSED
  repeated SpriteTypeArray third_background_rows = 3; // Third quadrant, negative x, negative y, UNUSED
  repeated SpriteTypeArray forth_background_rows = 4; // Forth quadrant, positive x, negative y, UNUSED
}

enum ProjectionType {
  // Parallel lines stay parallel
  PARALLEL = 0;

  // Lines parallel to Y-axis intersect at -Y infinity.
  // Lines parallel to Z-axis intersect at -Z infinity. Example: Paper Mario
  PERSPECTIVE_YZ = 2;
}

// A layer that contains densely packed graphic objects. For each object, only the sprite type is described.
message DenseGraphicsLayer {
  GraphicsLayer graphics_layer = 1;
  repeated SpriteTypeArray first_quadrant_rows = 2;
  repeated SpriteTypeArray second_quadrant_rows = 3;
  repeated SpriteTypeArray third_quadrant_rows = 4;
  repeated SpriteTypeArray forth_quadrant_rows = 5;
}

message Level {
  string identifier = 1; // To recognize the level from the code
  ProjectionType projection_type = 2;

  float camera_offset = 3; // X or Y component of the camera offset from the player in meters
  float camera_z_offset = 4; // Z component of the camera in PERSPECTIVE projection in meters
  float horizontal_fov = 5; // Horizontal FOV of the camera in PERSPECTIVE projection in degrees

  // First layer is drawn the last, thus it's on the front.
  repeated BackgroundLayer background_layers = 6; // DEPRECATED
  repeated Object objects = 7;
  repeated DenseGraphicsLayer dense_graphic_layers = 8;
}
