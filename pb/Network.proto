syntax = "proto3";
package m2.pb;

import "m2g_Network.proto";
import "m2g_ObjectType.proto";
import "m2g_ItemType.proto";
import "Item.proto";
import "VecF.proto";

enum ServerState {
  SERVER_NOT_READY = 0;
  SERVER_QUIT = 1;
  SERVER_LISTENING = 2;
  SERVER_READY = 3; // Lobby closed
  SERVER_STARTED = 4;
}

enum ClientState {
  CLIENT_NOT_READY = 0;
  CLIENT_QUIT = 1;
  CLIENT_CONNECTED = 2;
  CLIENT_READY = 3;
  CLIENT_STARTED = 4;
}

message ServerUpdate {
  // 0-based index of the receiver
  int32 receiver_index = 1;

  int32 turn_holder_index = 2;

  // ObjectId of the objects that belong to players. The size of this list also represents the player count.
  // player_object_id[receiver_index] is the object that represents the receiver.
  repeated uint64 player_object_ids = 3;

  message ObjectDescriptor {
    uint64 object_id = 1;
    VecF position = 2;
    m2g.pb.ObjectType object_type = 3;
    uint64 parent_id = 4;
    repeated m2g.pb.ItemType named_items = 6;
    repeated Resource resources = 7;
  }
  repeated ObjectDescriptor objects_with_character = 4; // The order is the same as Character pool
}

message ClientUpdate {}

message NetworkMessage {
  int32 game_hash = 1;
  int32 sender_id = 2; // 0 for servers

  // If all is null, the message is just a ping
  oneof type {
    m2g.pb.ServerCommand server_command = 3;
    m2.pb.ServerUpdate server_update = 4;
    m2g.pb.ClientCommand client_command = 5;
    m2.pb.ClientUpdate client_update = 6;
  }
}
