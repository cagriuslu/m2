syntax = "proto3";
package m2.pb;

import "m2g_SpriteType.proto";
import "m2g_ResourceType.proto";
import "m2g_AttributeType.proto";
import "m2g_ItemType.proto";
import "GameTypes.proto";

message Resource {
  m2g.pb.ResourceType type = 1;
  oneof value {
    float amount = 2;
  }
  oneof value_type {
    int32 int_value = 5;
    FF ff_value = 6;
  }
}

message Attribute {
    m2g.pb.AttributeType type = 1;
    float amount = 2;
    oneof value_type {
      int32 int_value = 3;
      FF ff_value = 4;
    }
}

enum Usage {
  // Item cannot be used, only held.
  STATIC = 0;

  // Item is constantly "in-use". The costs are deducted and benefits are applied automatically by the engine. When this
  // option is selected, the costs are benefits are pre-second values.
  AUTOMATIC = 1;

  // Item must be used manually and once at a time. The costs are deducted and benefits are applied by the engine. The
  // item doesn't disappear after use.
  REUSABLE = 2;

  // Item must be used manually and only once. The costs are deducted and benefits are applied by the engine. The item
  // disappears after one use.
  CONSUMABLE = 3;
}

/// An item also represents a capability
message Item {
  m2g.pb.ItemType type = 1;
  m2g.pb.ItemCategory category = 2;
  Usage usage = 3;
  bool use_on_acquire = 4;
  repeated Resource costs = 5;
  repeated Resource benefits = 6;
  repeated Resource acquire_benefits = 7; // Gained regardless use_on_acquire or not. Gained before benefits.
  repeated Attribute attributes = 8;
  m2g.pb.SpriteType game_sprite = 9;
  m2g.pb.SpriteType ui_sprite = 10;
  string in_game_name = 11;
}

message Items {
  repeated Item items = 1;
}